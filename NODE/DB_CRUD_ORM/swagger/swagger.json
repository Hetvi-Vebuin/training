{
  "openapi": "3.0.3",
  "info": {
    "title": "CRUD ORM Operation",
    "description": "API for user authentication, including registration and login",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "username", "password", "role"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@gmail.com"
          },
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30,
            "example": "john"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "securePass123"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user"],
            "example": "user"
          }
        }
      },
      "RegisterSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User registered successfully"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "john@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "securePass123"
          }
        }
      },
      "LoginSuccessResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Login successful" },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          }
        }
      },
      "UserDetailsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User details retrieved successfully"
          },
          "userData": {
            "type": "object",
            "properties": {
              "id": { "type": "integer", "example": 1 },
              "email": { "type": "string", "example": "john@gmail.com" },
              "username": { "type": "string", "example": "john" },
              "role": { "type": "string", "example": "user" }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Invalid credentials" }
        }
      }
    }
  },
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user with email, username, password, and role (admin or user).",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterSuccessResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email is already taken",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "description": "Logs in a user and returns an authentication token.",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get user details",
        "description": "Fetches authenticated user's details.",
        "tags": ["User Management"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserDetailsResponse" }
              }
            }
          },
          "403": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update user details",
        "description": "Allows authenticated users to update their own details. Admins can update any user.",
        "tags": ["User Management"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "message": "User updated successfully",
                  "data": {
                    "id": 1,
                    "email": "john_updated@gmail.com",
                    "username": "john_updated",
                    "role": "user"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "An unexpected error occurred"
                }
              }
            }
          }
        }
      },
      "/users/delete/{id}": {
        "delete": {
          "summary": "Delete a user",
          "description": "Allows authenticated users to delete their own account. Admins can delete any user.",
          "tags": ["User Management"],
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 1
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuccessResponse"
                  },
                  "example": {
                    "message": "User deleted successfully"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized - Permission denied",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "error": "Unauthorized"
                  }
                }
              }
            },
            "409": {
              "description": "Conflict - Cannot delete user with active dependencies",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "error": "User cannot be deleted due to active dependencies"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error - Unexpected failure",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "error": "An unexpected error occurred"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
